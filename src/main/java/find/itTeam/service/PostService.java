package find.itTeam.service;

import find.itTeam.dto.CreateNewPost;
import find.itTeam.entity.PostEntity;
import find.itTeam.repository.PostRepository;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.util.Optional;

@Service
public class PostService {
    private final PostRepository postRepository;


    public PostService(PostRepository postRepository) {
        this.postRepository = postRepository;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
     *
     * @param post - –ø–æ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     * @return - —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ—Å—Ç
     */
    public ResponseEntity<?> createNewPost(CreateNewPost post) {
        PostEntity newPost = new PostEntity();

        newPost.setContent(post.getContent());
        newPost.setDateTime(post.getDateTime());
        newPost.setPostStatus(post.getPostStatus());
        postRepository.save(newPost);
        return ResponseEntity.status(HttpStatus.OK).body(newPost);
    }

    /**
     * –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç–∞
     *
     * @param post - –ø–æ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     * @return - –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π –ø–æ—Å—Ç
     */
    public ResponseEntity<?> updatePost(CreateNewPost post, Long id) {
        Optional<PostEntity> postEntity = postRepository.findById(id);
        if (!postEntity.isPresent()) {
            // –î–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ, –ø–æ–∫–∞ –ø–æ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("üò∞–°–µ–π –ø–æ—Å—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...üò∞");
        }

        // todo (–¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤) —Å–¥–µ–ª–∞—Ç—å –º–µ—Ç–æ–¥ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞
        PostEntity updPost = new PostEntity();
        updPost.setContent(post.getContent());
        updPost.setDateTime(post.getDateTime());
        updPost.setPostStatus("–ò–∑–º–µ–Ω—ë–Ω");
        postRepository.save(updPost);
        return ResponseEntity.status(HttpStatus.OK).body(updPost);
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –ø–æ id
     *
     * @param postId - id –ø–æ—Å—Ç–∞
     */
    public ResponseEntity<?> deletePost(Long postId) {
        postRepository.deleteById(postId);
        return ResponseEntity.status(HttpStatus.OK).body("Deleted!");
    }
}

